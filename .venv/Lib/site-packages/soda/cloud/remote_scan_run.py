from __future__ import annotations

from dataclasses import dataclass
from datetime import datetime

from soda.cloud.soda_cloud import RemoteScanStatus
from soda.execution.scan_result import ScanResult


@dataclass
class RemoteScanRun:
    scan_id: str
    scan_status: RemoteScanStatus
    cloud_url: str | None
    scan_result: ScanResult | None
    created: datetime | None
    started: datetime | None
    ended: datetime | None
    submitted: datetime | None
    scan_time: datetime | None

    def is_finished(self) -> bool:
        """Returns True if the scan has reached a final state. Final states include error states where the scan has not run successfully."""
        from soda.cloud.soda_cloud import REMOTE_SCAN_FINAL_STATES

        return self.scan_status in REMOTE_SCAN_FINAL_STATES

    def is_completed(self) -> bool:
        """Returns True if the scan has completed successfully. This includes scans that have run successfully, and finished with/without warns/fails ."""
        from soda.cloud.soda_cloud import REMOTE_SCAN_COMPLETED_STATES

        return self.scan_status in REMOTE_SCAN_COMPLETED_STATES

    def is_running(self) -> bool:
        """Returns True if the scan is currently running. This includes scans that are in the process of running, and scans that are queued to run."""
        from soda.cloud.soda_cloud import REMOTE_SCAN_RUNNING_STATES

        return self.scan_status in REMOTE_SCAN_RUNNING_STATES
